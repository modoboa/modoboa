# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python PostgreSQL

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379/tcp
      openldap:
        image: docker.pkg.github.com/modoboa/docker-openldap/docker-openldap
        ports:
          - 389/tcp
        env:
          LDAP_DOMAIN: example.com
          LDAP_ADMIN_PASSWORD: test
        credentials:
          username: tonioo
          password: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install postfix librrd-dev rrdtool libldap2-dev libsasl2-dev libssl-dev
        python -m pip install --upgrade pip
        pip install codecov
        pip install -r requirements.txt
        pip install -r ldap-requirements.txt
        pip install -r test-requirements.txt
        pip install -r mysql-requirements.txt
        python setup.py develop
    - name: Test with pytest
      run: |
        python ./tests.py
        cd test_project
        coverage run manage.py test modoboa.core modoboa.lib modoboa.admin modoboa.limits modoboa.transport modoboa.relaydomains modoboa.dnstools modoboa.ldapsync modoboa.policyd modoboa.maillog
      env:
        # use localhost for the host here because we are running the job on the VM.
        # If we were running the job on in a container this would be postgres
        MYSQL_HOST: localhost
        MYSQL_PORT: ${{ job.services.mysql.ports[3306] }} # get randomly assigned published port
        REDIS_PORT: ${{ job.services.redis.ports[6379] }}
        LDAP_SERVER_PORT: ${{ job.services.openldap.ports[389] }}
